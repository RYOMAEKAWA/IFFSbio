Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
roxygen2::roxygenise()
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.0",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("/Users/ryo/OneDrive/RProjects/IFFSハンズオンセミナー/data/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# tar.gzにして配布
devtools::build()
roxygen2::roxygenise()
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.0",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# tar.gzにして配布
devtools::build()
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.0",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# tar.gzにして配布
devtools::build()
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.0",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.0",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# tar.gzにbuildディレクトリ内にパッケージを作成
devtools::build(path = "IFFSbio/build")
# tar.gzにbuildディレクトリ内にパッケージを作成
devtools::build(path = "./build")
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.0",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# tar.gzにbuildディレクトリ内にパッケージを作成
devtools::build(path = "./build")
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.1",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# tar.gzにbuildディレクトリ内にパッケージを作成
devtools::build(path = "./build")
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.1",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# DISCRIPTIONファイルを作成
usethis::use_description(
fields = list(
Title = "IFFS Bioinformatics Test Package",
Description = "A test package for bioinformatics analysis using IFFS data.",
Version = "0.1.1",
Author = "Your Name [RYO MAEKAWA]",
Maintainer = "Your Name <ryomaekawa@outlook.jp>",
License = "MIT",
LazyData = "true"
)
)
## 依存パッケージ CRAN分のみ
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
usethis::use_package("dplyr")
usethis::use_package("tibble")
usethis::use_package("readr")
usethis::use_package("purrr")
usethis::use_package("forcats")
usethis::use_package("stringr")
## 依存パッケージ BiocManager分（zzz.Rでインストールするから宣言は不要だが）
usethis::use_package("DESeq2")
usethis::use_package("org.Hs.eg.db")
usethis::use_package("clusterProfiler")
usethis::use_package("enrichplot")
usethis::use_package("topGO")
usethis::use_package("Rgraphviz")
usethis::use_package("pheatmap")
# testデータを読み込む済みのデータとして格納
test_data <- read.csv("./inst/extdata/raw_count_data.csv", header  = T)
test_data <- test_data[,-which(names(test_data)=="GO_info")]
usethis::use_data(test_data, overwrite = TRUE)
# NAMESPACE の更新
devtools::document()
# NAMESPACE の更新
devtools::document()
source("~/Library/CloudStorage/OneDrive-Personal/RProjects/IFFSbio_develop/IFFSbio/IFFSbio_0.1.0.tar.R")
source("~/Library/CloudStorage/OneDrive-Personal/RProjects/IFFSbio_develop/IFFSbio/IFFSbio_0.1.2.tar.R")
install.packages(c("tidyverse", "pheatmap"))
library(DESeq2)
set.seed(42)
# カウントデータを模擬的に作成
countData <- matrix(c(
1, 1, 1,    10, 10, 10,  # 高発現 (10倍変化)
0, 0, 0,     1,  1,  1,   # 低発現 (10倍変化)
100, 100, 100, 200, 200, 200 # 中発現 (2倍変化)
), ncol = 6, byrow = TRUE)
colData <- data.frame(condition = factor(rep(c("A", "B"), each = 3)))
# DESeq2オブジェクトを作成
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ condition)
dds <- DESeq(dds)
dds
# 収縮後の結果
res_shrink <- lfcShrink(dds, contrast = c("condition", "B", "A"), type = "ashr")
res_shrink
dds <- estimateDispersionsGeneEst(dds)
library(DESeq2)
set.seed(42)
# カウントデータを模擬的に作成
countData <- matrix(c(
# 高発現遺伝子 (10倍変化)
100, 100, 100, 1000, 1000, 1000,
# 中発現遺伝子 (2倍変化)
100, 100, 100, 200, 200, 200,
# 低発現遺伝子 (0.1倍変化) -> 実際の変化は小さいがfold changeは大きい
1,   1,   1,   10,   10,   10
), ncol = 6, byrow = TRUE)
# グループ情報を設定
colData <- data.frame(condition = factor(rep(c("A", "B"), each = 3)))
# DESeq2オブジェクトを作成
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ condition)
# DESeq2の実行
dds <- DESeq(dds)
dds <- DESeq(dds)
dds
dds <- DESeq(dds, fitType = "local")
dds
library(DESeq2)
set.seed(42)
# カウントデータを模擬的に作成
countData <- matrix(c(
# 高発現遺伝子 (10倍変化: 100 -> 1000)
100, 100, 100, 1000, 1000, 1000,
# 中発現遺伝子 (2倍変化: 100 -> 200)
100, 100, 100, 200, 200, 200,
# 低発現遺伝子 (10倍変化: 1 -> 10)
1,   1,   1,   10,   10,   10,
# 非変化遺伝子 (変化なし: 50 -> 50)
50,  50,  50,  50,  50,  50,
# 極低発現での大きな変化 (0 -> 5)
0,   0,   0,   5,   5,   5
), ncol = 6, byrow = TRUE)
# 遺伝子名を設定
rownames(countData) <- c("HighExp", "MidExp", "LowExp", "NoChange", "ZeroToLow")
# グループ情報を設定
colData <- data.frame(condition = factor(rep(c("A", "B"), each = 3)))
# DESeq2オブジェクトを作成
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ condition)
# DESeq2の実行
dds <- DESeq(dds)
countData
library(DESeq2)
set.seed(42)
# 遺伝子数とサンプル数を設定
num_genes <- 100  # 遺伝子数
num_samples <- 6   # サンプル数 (3 vs 3)
# ランダムに発現量を生成 (高発現、中発現、低発現)
high_expression <- rpois(num_genes, lambda = 1000)  # 高発現 (平均1000)
mid_expression <- rpois(num_genes, lambda = 100)    # 中発現 (平均100)
low_expression <- rpois(num_genes, lambda = 10)     # 低発現 (平均10)
# A群とB群のデータを作成 (B群はA群の一部を変動させる)
countData <- cbind(
high_expression, high_expression + rpois(num_genes, 50), high_expression + rpois(num_genes, 100),
mid_expression, mid_expression + rpois(num_genes, 10), mid_expression + rpois(num_genes, 20)
)
# グループ情報を設定
colData <- data.frame(condition = factor(rep(c("A", "B"), each = 3)))
# DESeq2オブジェクトを作成
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ condition)
# DESeq2の実行
dds <- DESeq(dds)
dds
countData
countData %>% dim()
colData
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = ~ condition)
data.frame(dds)
dds
dds@metadata
dds@assays
dds@elementMetadata
str(dds)
dds@assays@data
dds@assays@data %>% print()
getwd()
list.files()
packageVersion("BiocParallel")
BiocManager::repositories()
getOption("repos")
options(repos = BiocManager::repositories())
getOption("repos")
library(DESeq2) # DEG用
library(tidyverse) # データ処理
library(clusterProfiler) # GOとKEGG用
library(org.Hs.eg.db)  # ヒトのgenome data
library(enrichplot) # plot用
library(ggplot2) # plot用
library(topGO) # GO用
library(Rgraphviz) # topGOの可視化
library(pheatmap) # heatmap
library(EnhancedVolcano) # volcano plot
library(ashr) # DEGの収縮
BiocManager::install("GenomeInfoDbData", type = "binary")
# CRANパッケージのインストール
install.packages(c("tidyverse", "pheatmap", "ashr"))
# Bioconductorパッケージのインストール
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
# リポジトリ（CRAN + Bioconductor）の設定
options(repos = BiocManager::repositories())
getOption("repos")
BiocManager::install(c(
"DESeq2",
"GenomeInfoDb",
"clusterProfiler",
"org.Hs.eg.db",
"enrichplot",
"topGO",
"Rgraphviz",
"EnhancedVolcano"
))
library(DESeq2) # DEG用
library(tidyverse) # データ処理
library(clusterProfiler) # GOとKEGG用
library(org.Hs.eg.db)  # ヒトのgenome data
library(enrichplot) # plot用
library(ggplot2) # plot用
library(topGO) # GO用
library(Rgraphviz) # topGOの可視化
library(pheatmap) # heatmap
library(EnhancedVolcano) # volcano plot
library(ashr) # DEGの収縮
BiocManager::install("BiocParallel", type = "source")
BiocManager::install("GenomeInfoDbData", type = "binary")
BiocManager::install("BiocParallel", type = "source")
BiocManager::install("GenomeInfoDbData", type = "source")
BiocManager::install("GenomeInfoDbData", type = "source", force = TRUE)
.Platform$OS.type
# OSに応じたライブラリパスの設定
if (.Platform$OS.type == "windows") {
.libPaths(file.path(Sys.getenv("USERPROFILE"), "Documents", "R", paste0("win-library/", R.version$major, ".", R.version$minor)))
} else {
.libPaths(file.path(Sys.getenv("HOME"), "Library", "R", paste0(R.version$major, ".", R.version$minor), "library"))
}
# CRANパッケージのインストール
cran_packages <- c("tidyverse", "pheatmap", "ashr")
install_if_missing <- function(pkg) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
}
invisible(lapply(cran_packages, install_if_missing))
# Bioconductorパッケージのインストール
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
options(repos = BiocManager::repositories())
bioc_packages <- c(
"DESeq2",
"GenomeInfoDb",
"clusterProfiler",
"org.Hs.eg.db",
"enrichplot",
"topGO",
"Rgraphviz",
"EnhancedVolcano"
)
install_bioc_if_missing <- function(pkg) {
if (!requireNamespace(pkg, quietly = TRUE)) {
BiocManager::install(pkg)
}
}
invisible(lapply(bioc_packages, install_bioc_if_missing))
View(df)
view()
Name <- c("Bob", "Alice", "Ken", "Hiroko", "Bill", "Hanako")
Bw   <- c(40, 50, 60, 90, 70, 55)
Ht   <- c(156, 187, 168, 145, 172, 156)
df <- data.frame(Name, Bw, Ht)
view(df)
View(df)
view(df)
